import { useState } from 'react'
import {TodoContext,TodoContextProvider,useTodo} from "./context"

import './App.css'

function App() {
  const [todos,setTodos]=useState([]);


  //❤️❤️❤️ adding to the Todo
  const addTodo = (todo) => {
    //setTodos(todos) illa chesthe main disadvantage vachi unna todos anni delete ayyi new todo update avvutundhi
    //todo is taken from the form
    setTodos((prev) => [{id:Date.now(),...todo},...prev])
    //...prev is used to take the previous todos values and we can add them in after or before the new todo
    //here we are using id as Date.now() for unique id
    //and  we are spreading that todo values inside the newly created todo and add it to the particular id(which generated by the time)
  }

   //❤️❤️❤️ deleting  the Todo

   const deleteTodo = (id) => {
    setTodos((prev) => prev.filter((prevTodo) => prevTodo.id!==id))
    //filter is used to take based on the conditions and that values are seted to the setTodo
   }
   
    //❤️❤️❤️ updating  the Todo

    const updateTodo = (id,todo) => {
      setTodos((prev) => prev.map((prevTodo) => (prevTodo.id===id ? todo : prevTodo )))
    } 

     //❤️❤️❤️ Toogle the Todo

     const ToogleTodo = (id) => {
      setTodos((prev) => 
      prev.map((prevTodo) => 
      prevTodo.id===id ? {...prevTodo,completed:!prevTodo.completed} : prevTodo))
      //if the condition  is failed don't chane the Todo
     }

     //logic was diffcult but see these
    //  if(prevTodo.id===id){
    //   ...prevTodo,completed:!prevTodo.completed
    //  }else{
    //   prevTodo
    //  }

    



  return (
    <TodoContextProvider value={{todos,addTodo,deleteTodo,updateTodo,ToogleTodo}}>
      <div className="bg-[#172842] min-h-screen py-8">
                <div className="w-full max-w-2xl mx-auto shadow-md rounded-lg px-4 py-3 text-white">
                    <h1 className="text-2xl font-bold text-center mb-8 mt-2">Manage Your Todos</h1>
                    <div className="mb-4">
                        {/* Todo form goes here */} 
                    </div>
                    <div className="flex flex-wrap gap-y-3">
                        {/*Loop and Add TodoItem here */}
                    </div>
                </div>
            </div>
    </TodoContextProvider>
  )
}

export default App
